---
resource_types:
- name: pivnet
  type: docker-image
  source:  
    repository: pivotalcf/pivnet-resource
    tag: latest

resources:
############
#### S3 ####
############
# Platform-Automation
- name: platform-automation-tasks
  type: s3
  icon: cloud_download
  source:
    access_key_id: ((s3_account.username))
    bucket: ((s3_products_bucket))
    region_name: us-east-1
    secret_access_key: ((s3_account.password))
    regexp: platform-automation-tasks\/platform-automation-tasks-(.*).zip
- name: platform-automation-image
  type: s3
  icon: cloud_download
  source:
    access_key_id: ((s3_account.username))
    bucket: ((s3_products_bucket))
    region_name: us-east-1
    secret_access_key: ((s3_account.password))
    regexp: platform-automation-image\/platform-automation-image-(.*).tgz
- name: tkgi-cli
  type: s3
  icon: cloud_download
  source:
    access_key_id: ((s3_account.username))
    bucket: ((s3_products_bucket))
    region_name: us-east-1
    secret_access_key: ((s3_account.password))
    regexp: clis\/tkgi-(.*)
- name: kubectl-cli
  type: s3
  icon: cloud_download
  source:
    access_key_id: ((s3_account.username))
    bucket: ((s3_products_bucket))
    region_name: us-east-1
    secret_access_key: ((s3_account.password))
    regexp: clis\/kubectl-(.*)
- name: fly-cli
  type: s3
  icon: cloud_download
  source:
    access_key_id: ((s3_account.username))
    bucket: ((s3_products_bucket))
    region_name: us-east-1
    secret_access_key: ((s3_account.password))
    versioned_file: clis/fly
- name: yq-cli
  type: s3
  icon: cloud_download
  source:
    access_key_id: ((s3_account.username))
    bucket: ((s3_products_bucket))
    region_name: us-east-1
    secret_access_key: ((s3_account.password))
    regexp: clis\/yq(.*)
#############
#### GIT ####
#############
- name: configuration
  type: git
  icon: git
  source:
    username: ((service-account.username))
    password: ((service-account.password))
    uri: ((platform-automation-uri))
    branch: master
    skip_ssl_verification: true
- name: custom-tasks
  type: git
  icon: git
  source:
    username: ((service-account.username))
    password: ((service-account.password))
    uri: ((platform-automation-uri))
    branch: master
    skip_ssl_verification: true

- name: clusters
  type: git
  icon: git
  source:
    username: ((service-account.username))
    password: ((service-account.password))
    uri: ((platform-automation-uri))
    branch: master
    paths: ["vars/*/k8s-clusters.yml"]
    skip_ssl_verification: true

- name: pipelines
  type: git
  icon: git
  source:
    username: ((service-account.username))
    password: ((service-account.password))
    uri: ((platform-automation-uri))
    branch: master
    skip_ssl_verification: true

##################
#### Triggers ####
##################

# This task is used in multiple jobs
# The yaml anchor "*prepare-tasks-with-secrets" is used in its place

prepare-tasks-with-secrets: &prepare-tasks-with-secrets
  image: platform-automation-image
  file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
  params:
    CONFIG_PATHS: config/config/cluster-operations
    VARS_PATHS: vars/vars/((foundation))
  input_mapping:
    tasks: platform-automation-tasks
    config: configuration
    vars: configuration
  output_mapping:
    tasks: platform-automation-tasks

# This task is used in multiple jobs
# The yaml anchor "*prepare-config-with-secrets" is used in its place
prepare-config-with-secrets: &prepare-config-with-secrets
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  input_mapping:
    files: configuration
  params:
    OM_SKIP_SSL_VALIDATION: true
    CREDHUB_CLIENT: ((credhub.username))
    CREDHUB_SECRET: ((credhub.password))
    CREDHUB_SERVER: ((credhub_server))
    CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
    PREFIX: /concourse/((foundation))
    INTERPOLATION_PATHS: env state vars/((foundation))
    SKIP_MISSING: true
  output_mapping:
    interpolated-files: configuration

# These credentials are used in multiple jobs for backup and restore
# The yaml anchor "*opsman_credentials" is used in its place
opsman_credentials: &opsman_credentials
  OPSMAN_URL: ((opsman_url))
  OPSMAN_USERNAME: ((opsman-user.username))
  OPSMAN_PASSWORD: ((opsman-user.password))
  OPSMAN_PRIVATE_KEY: ((opsman-ssh.private_key))
  SKIP_SSL_VALIDATION: "true"

jobs:
- name: set-clusters-pipelines
  plan:
  - in_parallel:
    - get: platform-automation-image
      params:
        globs: ["*aws*"]
        unpack: true    
    - get: platform-automation-tasks
      params:
        globs: ["*tasks*"]
        unpack: true
    - get: tkgi-cli
      params:
        globs: ["*tkgi*"]
        unpack: false
    - get: clusters
      trigger: true
    - get: configuration
    - get: pipelines
    - get: custom-tasks
    - get: kubectl-cli
    - get: fly-cli
    - get: yq-cli
  - task: prepare-tasks-with-secrets
    <<: *prepare-tasks-with-secrets
  - task: prepare-config-with-secrets
    <<: *prepare-config-with-secrets
  - task: set-pipelines
    image: platform-automation-image
    file: custom-tasks/tasks/set_clusters_pipeline.yml
    input_mapping:
      env: configuration
      config: configuration
    params:
      CLUSTER_CONFIG_FILE: config/vars/((foundation))/k8s-clusters.yml
      ENV_FILE: env/((foundation)).yml
      PIPELINE_FILE: pipelines/cluster-operations/pipeline.yaml
      PIPELINE_VARS_FILE: pipelines/cluster-operations/vars/((foundation)).yml
      CONCOURSE_URL: ((concourse_url))
      CONCOURSE_TARGET: ((concourse_target))
      CONCOURSE_TEAM: ((concourse_team))
      CONCOURSE_USERNAME: ((concourse_admin.username))
      CONCOURSE_PASSWORD: ((concourse_admin.password))
      CONCOURSE_CERT: ((concourse_cert.certificate))

